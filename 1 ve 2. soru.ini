Java dünyasındaki framework’ler ve çözdükleri problemler nedir? Kod Örneklendirini
de içermelidir.
Java ekosisteminde pekçok framework vardır.Herbir framework farklı problemleri çözer.
1-Spring:Kurumsal uygulamalr geliştirmek için kullanılır.En çok tercih edilen framework'tür.
Daha hızlı uygulama geliştirme için çözüm sunar.Bean-Object yönetimi,Transaction yönetimi
ve Config öğeleri gibi şeyler Spring tarafından bizim yerimize halledilir.
public class spring {
    private SomeDependency dependency;

    public spring(SomeDependency dependency) {
        this.dependency = dependency;
    }
}
2-HIBERNATE:Hibernate; doğrudan perspektif eşlemeyi değiştirerek object relational 
impedance uyumsuzluğu sorununu çözer.
public class Employee {
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    private String name;
    private String department;
    private double salary;
    
}
3-Maven:Uygulamanın Build sürecini kolaylaştırmak. 
Tek tip (uniform) bir yapılandırma sistemi sağlamak.

public class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Hello, Maven!");
    }
}
4-Apache Struts: Web uygulamaları geliştirmek için kullanılan bir framework olan Struts, 
Model-View-Controller (MVC) mimarisine dayanır.
public class LoginAction extends ActionSupport {
    private String username;
    private String password;

    public String execute() {
        return SUCCESS;
    }
}
SOA - Web Service - Restful Service - HTTP methods kavramlarını örneklerle
açıklayınız.
SOA (Service-Oriented Architecture), yazılım sistemlerinin hizmet odaklı mimariler 
kullanılarak tasarlanması ve uygulanmasını sağlayan bir yaklaşımdır. SOA, hizmetlerin bağımsız birimler olarak tanımlanmasını 
ve bu hizmetler arasında iletişim kurulmasını sağlar. 

Web Service:

Web servisler, ağ üzerinden erişilebilen ve genellikle XML formatında veri alışverişi yapan yazılım sistemleridir.
Web servisler, farklı platformlar arasında iletişim kurmayı sağlar.
Örneğin, bir banka sistemi, müşteri bilgilerini ve hesap bakiyelerini döndüren bir web servise sahip olabilir.

RESTful Service:

RESTful servisler, REST prensiplerine uygun olarak tasarlanmış ve uygulanmış olan web servisleridir.
REST, kaynakları (resources) temsil eden URI'ler (Uniform Resource Identifiers) üzerinden HTTP protokolü ile erişim sağlar.
RESTful servisler, HTTP metotlarını (GET, POST, PUT, DELETE vb.) kullanarak kaynakların üzerinde işlemler gerçekleştirir.
Örneğin, bir e-ticaret platformu, ürün listesini almak için GET metoduyla /products endpoint'ine istek yapabilir veya 
yeni bir ürün eklemek için POST metoduyla /products endpoint'ine istek yapabilir.

HTTP Methods (HTTP Metodları):

HTTP protokolü, farklı işlemleri gerçekleştirmek için çeşitli metotlar (methods) sağlar.
En yaygın kullanılan HTTP metotları arasında GET, POST, PUT, DELETE, PATCH, OPTIONS bulunur.
Bu metotlar, web uygulamaları arasında veri alışverişi ve kaynakların yönetimi için kullanılır.
Örneğin:
GET metodu, belirli bir kaynağın (resource) bilgisini almak için kullanılır. Örneğin, bir haber sitesindeki makaleleri getirmek
 için kullanılabilir.
 